#!/bin/bash


if [[ $# == 0 ]]; then
    echo "usage: bump [patch|minor|major x.x.x] or [init|x.x.x]"
    echo "version: 1.0.1"
    exit 1
fi

function increment { echo "$1 + 1" | bc; }

function join { local IFS="$1"; shift; echo "$*"; }


NEXT=$1

if [[ "$NEXT" == "patch" || "$NEXT" == "minor" || "$NEXT" == "major" ]]; then
    VERSION=$2
else
    # we assume it's init or x.x.x
    if [[ -n $2 ]]; then
        (>&2 echo "can't increment from $2 to $1")
        exit 1
    fi
    VERSION=$1
fi


PATTERN="^\(.*\)\.\(.*\)\.\(.*\)"

FIRST=`echo $VERSION | sed 's/'"$PATTERN"'/\1/'`
if [[ -z "$FIRST" ]]; then
    FIRST=0
fi

SECOND=`echo $VERSION | sed 's/'"$PATTERN"'/\2/'`
if [[ -z "$SECOND" ]]; then
    SECOND=0
fi

THIRD=`echo $VERSION | sed 's/'"$PATTERN"'/\3/'`
if [[ -z "$THIRD" ]]; then
    THIRD=0
fi

if [[ $# -gt 0 ]]; then
    case $NEXT in
    "patch")
        THIRD=$(increment $THIRD)
        ;;
    "minor")
        SECOND=$(increment $SECOND)
        THIRD=0
        ;;
    "major")
        FIRST=$(increment $FIRST)
        SECOND=0
        THIRD=0
        ;;
    "init")
        FIRST=0
        SECOND=0
        THIRD=0
        ;;
    *)
        FIRST=$(echo $VERSION | cut -d "." -f 1)
        SECOND=$(echo $VERSION | cut -d "." -f 2)
        THIRD=$(echo $VERSION | cut -d "." -f 3)
        ;;
    esac
fi

NEXT_VERSION=$FIRST"."$SECOND"."$THIRD
echo $NEXT_VERSION

exit 0
