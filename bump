#!/bin/bash

if [[ $# == 0 ]]; then
    echo "usage: bump [patch|minor|major|x.x.x] message"
    echo ""
fi

function increment { echo "$1 + 1" | bc; }

function join { local IFS="$1"; shift; echo "$*"; }


VERSION=$1
MESSAGE=$2

FILES=("package.json" "bower.json")


for FILE in ${FILES[@]};
do
    if [[ ! -e $FILE ]]; then
        continue
    fi

    RAW_VERSION=`cat $FILE | grep "version"`

    PATTERN="^[[:space:]]*\"version\": \"\(.*\)\.\(.*\)\.\(.*\)\","
    FIRST=`echo $RAW_VERSION | sed 's/'"$PATTERN"'/\1/'`
    SECOND=`echo $RAW_VERSION | sed 's/'"$PATTERN"'/\2/'`
    THIRD=`echo $RAW_VERSION | sed 's/'"$PATTERN"'/\3/'`

    if [[ $# -gt 0 ]]; then
        case $VERSION in
        "patch")
            THIRD=$(increment $THIRD)
            ;;
        "minor")
            SECOND=$(increment $SECOND)
            THIRD=0
            ;;
        "major")
            FIRST=$(increment $FIRST)
            SECOND=0
            THIRD=0
            ;;
        *)
            FIRST=$(echo $VERSION | cut -d "." -f 1)
            SECOND=$(echo $VERSION | cut -d "." -f 2)
            THIRD=$(echo $VERSION | cut -d "." -f 3)
            ;;
        esac
    fi

    NEXT_VERSION=$FIRST"."$SECOND"."$THIRD
    TAG=v$NEXT_VERSION

    echo -e "$FILE:\t$NEXT_VERSION"

    if [[ $# -gt 0 && -n "$PREVIOUS_VERSION" && $PREVIOUS_VERSION != $NEXT_VERSION ]];then
        echo "versions are inconsistent ($PREVIOUS_VERSION != $NEXT_VERSION). Run: bump to show the version of each file."
        exit 1
    fi
    PREVIOUS_VERSION=$NEXT_VERSION

    if [[ $# -gt 0 ]]; then
        sed -i "" 's/"version": "\(.*\)",/"version": "'$NEXT_VERSION'",/' $FILE
    fi

done


if [[ -n "$MESSAGE" ]]; then
    git add $(join " " ${FILES[@]})
    git commit -m "bump to $TAG"
    git tag $TAG -m "$MESSAGE"
    #git push origin $TAG
fi

exit 0
